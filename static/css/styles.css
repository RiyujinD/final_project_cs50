/* Variable and preset to use around the all app */
:root {
  font-family: 'Montserrat', sans-serif;
  --width_button: 100px;
  --height_button: 50px;
  --svg_size: 70px;

}

/* Dark Theme */
[data-theme="dark"] {
  --bg-color: hsl(240, 5%, 4%);
  --text-color: #f5f5f5;
  --hr-color: rgba(255, 255, 255, 0.5);
  --button-bg: linear-gradient(to bottom, hsl(240, 5%, 6%) 0%, hsl(240, 5%, 4%) 50%, hsl(240, 5%, 2%) 100%);
  --outline: 2px solid rgba(100, 0, 233, 0.6);
}

/* Light Theme */
[data-theme="light"] {
  --bg-color: rgba(255, 255, 255, 0.479);
  --text-color: black;
  --hr-color: rgba(0, 0, 0, 0.5);
  --button-bg: linear-gradient(to right, #222, #444);
  --outline: 2px solid hsla(204, 35%, 74%, 0.6);
}

/* Global Styles */
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
}

html {
  scroll-behavior: smooth;
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: background 1s ease, color 1s ease;
}


hr {
  margin-inline: auto; 
  width: 50%;
  background-color: var(--hr-color); 
  border: none; 
  height: 0.1rem; 
  opacity: 0.1;
}

/* Change width of the default scrollbar */
body::-webkit-scrollbar {
  width: 1rem;
}
  /* Change the color of the track */
body::-webkit-scrollbar-track {
  background: #1e1e24;
}
  /* Change the thumb (scrollable part */
body::-webkit-scrollbar-thumb {
  background: rgba(116, 105, 105, 0.3);
  border-radius: 10px;
}

/* Thinner scrollbar on smaller screen */
@media (max-width: 600px) {
  body::-webkit-scrollbar { 
      width: 0.9rem;
  }
}


/* nav Navbar > ul navbar_nav > li nav_item > a nav_link > items inside link logo / infotext*/
#navbar {
  height: 6rem;
  width: 100%;
  top: 0;
  background-color: hsl(240, 5%, 4%);
  display: flex; 
  align-items: flex-start; 
  padding-top: 1rem;
  transition: opacity 2s ease-in-out;
  z-index: 100;
}

#navbar-nav {
  list-style: none;
  width: 100%;
  display: flex;
  flex-direction: row-reverse;  
}

.nav-item {
  height: 100%;
  width: max-content;
  margin: 0 1%;
}

.nav-item:nth-child(2) {
  margin-block: auto;
} 

.nav-link {
  text-decoration: none;
  width: 5.5rem;
  color: #f5f5f5;
  display: flex;
  flex-direction: column; 
  align-items: center;
  justify-content: center;
}

.nav-icon {
  font-size: 3rem; /* svg size */
  min-height: 3rem;
}

.nav-item:last-child {
  margin-right: auto;
}

/* Display the text only after hover */
.link-text {
  display: none;
}

.nav-item:hover .link-text {
  display: block;
}      

/* Night/light Mod button */  
/* Removing the default check input */
input[type="checkbox"]#theme_toggle {
  opacity: 0;
  position: absolute;
  left: -9999px;
  top: -9999px;
}

/* label container */
input[type="checkbox"]#theme_toggle + label {
  position: relative;
  display: flex; 
  transform: scaleX(-1);
  transition: opacity .4s ease-in-out;
}

/* New checkbox styling */
input[type="checkbox"]#theme_toggle + label::before {
  content: '';
  width: var(--width_button);
  height: var(--height_button);
  border-radius: calc(max(var(--height_button), var(--width_button)) / 2);
  cursor: pointer;
  transition: box-shadow 1s ease-in-out;
  outline: var(--outline);
  opacity: .5;
}

input[type="checkbox"]#theme_toggle + label:hover::before {
  opacity: .7;
  outline: 3px solid rgba(33, 0, 233, .7);
}

/* SVG styling */
label svg {
  height: var(--svg_size);
  width: var(--svg_size);
  position: absolute;
  cursor: pointer;
  top: 50%;
  filter: drop-shadow(.2px .2px 5px rgba(0, 120, 200, .5));
  transform: translateY(-50%);
  transition: transform 2s ease;
}


/* ANIMATIONS: dynamically add in js scripts/js depending on checkbox state */
.offsetCheck {
  transform: translate(calc(var(--width_button) - var(--svg_size)), -50%) rotate(360deg);    
}

.offsetUncheck {
  transform: translate(0, -50%) rotate(-360deg);   
}

@keyframes fadeIn {
  0% { opacity: 0; }
  50% { opacity: 1; }
  100% { opacity: 1; }
}

@keyframes fadeOut {
  0% { opacity: 1; }
  50% { opacity: 0; }
  100% { opacity: 0; }
}

.fadeOut {
  animation: fadeOut 2s ease-in-out forwards;
}

.fadeIn {
  animation: fadeIn 2s ease-in-out forwards;
}
/* END OF ANIMATIONS */
